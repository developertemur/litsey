// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using litsey.Models;

namespace litsey.Migrations
{
    [DbContext(typeof(litseydbContext))]
    [Migration("20210405091648_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("litsey.Models.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("Grade")
                        .HasColumnType("INTEGER")
                        .HasColumnName("grade");

                    b.Property<string>("Nomi")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nomi");

                    b.Property<long?>("ProfessionId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("professionId");

                    b.HasKey("Id");

                    b.HasIndex("ProfessionId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("litsey.Models.GroupSubject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long?>("GroupId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("groupId");

                    b.Property<long?>("SubjectId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("subjectId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("SubjectId");

                    b.ToTable("GroupSubject");
                });

            modelBuilder.Entity("litsey.Models.Mark", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long?>("Olimpiada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("olimpiada")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("Q1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("q1")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("Q2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("q2")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("Q3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("q3")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("Q4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("q4")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("S1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("s1")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("S2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("s2")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("S3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("s3")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("S4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("s4")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("StudentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("studentId");

                    b.Property<long?>("Tanlov")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("tanlov")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Mark");
                });

            modelBuilder.Entity("litsey.Models.Profession", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Nomi")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nomi");

                    b.HasKey("Id");

                    b.ToTable("Profession");
                });

            modelBuilder.Entity("litsey.Models.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long?>("GroupId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("groupId");

                    b.Property<string>("Nomi")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nomi");

                    b.Property<string>("Sharif")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("sharif");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("surname");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("litsey.Models.Subject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Nomi")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nomi");

                    b.HasKey("Id");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("litsey.Models.Group", b =>
                {
                    b.HasOne("litsey.Models.Profession", "Profession")
                        .WithMany("Groups")
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Profession");
                });

            modelBuilder.Entity("litsey.Models.GroupSubject", b =>
                {
                    b.HasOne("litsey.Models.Group", "Group")
                        .WithMany("GroupSubjects")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("litsey.Models.Subject", "Subject")
                        .WithMany("GroupSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Group");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("litsey.Models.Mark", b =>
                {
                    b.HasOne("litsey.Models.Student", "Student")
                        .WithMany("Marks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Student");
                });

            modelBuilder.Entity("litsey.Models.Student", b =>
                {
                    b.HasOne("litsey.Models.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Group");
                });

            modelBuilder.Entity("litsey.Models.Group", b =>
                {
                    b.Navigation("GroupSubjects");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("litsey.Models.Profession", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("litsey.Models.Student", b =>
                {
                    b.Navigation("Marks");
                });

            modelBuilder.Entity("litsey.Models.Subject", b =>
                {
                    b.Navigation("GroupSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
